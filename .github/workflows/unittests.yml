name: Run backend kotlin tests with maven

on:
  push:
    branches:
      - '**'        # matches every branch
      - '!master'   # excludes master
      - '!development'   # excludes development
  pull_request:
    branches:
      - '**'        # matches every branch
      - '!master'   # excludes master
      - '!development'   # excludes development

jobs:
  container-job:

    runs-on: self-hosted
    container: 
      image: ubuntu:latest

    # Service containers to run with `container-job`
    services:
      # Label used to access the service container
      # Need to actually run a postgres container to allow app to build
      postgres:
        image: postgres
#         ports:
#           - 5432:5432

        env:
          POSTGRES_USER: ${{ secrets.database_username }}
          POSTGRES_PASSWORD: ${{ secrets.database_password }}
          POSTGRES_DB: ${{ secrets.database_name }}

        # Set health checks to wait until postgres has started
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Install sudo and wget
        run: |
          apt update && apt install -y sudo && sudo apt install -y wget
      - name: Install java manually
        run: |
          sudo wget https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz
          sudo tar xvf openjdk-17_linux-x64_bin.tar.gz
          sudo mv jdk-17 /opt/
          export JAVA_HOME=/opt/jdk-17
          export PATH=$PATH:$JAVA_HOME/bin 
          
      - name: Install maven manually
        run: |
          export VER="3.8.4"
          sudo wget http://www-eu.apache.org/dist/maven/maven-3/${VER}/binaries/apache-maven-${VER}-bin.tar.gz
          sudo tar xvf apache-maven-${VER}-bin.tar.gz
          sudo mv apache-maven-${VER} /opt/maven
          export MAVEN_HOME=/opt/maven
          export PATH=\$PATH:\$MAVEN_HOME/bin
          mvn -v
          
      - name: Test maven version
        run: |
          mvn -v

      - uses: actions/checkout@v2
#       - name: Set up JDK 17
#         uses: actions/setup-java@v2
#         with:
#           distribution: 'temurin'
#           java-version: '17'
#           check-latest: true


#       - run: |
#           # download_url="https://github.com/AdoptOpenJDK/openjdk11-binaries/releases/download/jdk-11.0.10%2B9/OpenJDK11U-jdk_x64_linux_hotspot_11.0.10_9.tar.gz"
#           download_url="https://download.java.net/java/GA/jdk17/0d483333a00540d886896bac774ff48b/35/GPL/openjdk-17_linux-x64_bin.tar.gz"
#           wget -O $RUNNER_TEMP/java_package.tar.gz $download_url
#       - uses: actions/setup-java@v2
#         with:
#           distribution: 'jdkfile'
#           jdkFile: ${{ runner.temp }}/java_package.tar.gz
#           java-version: '17'
#           architecture: x64

      - name: Test with Maven
        # -B: run in non-interactive (batch) mode
        run: |
          mvn -B -Dtest="unittests.**" test --file backend/pom.xml
